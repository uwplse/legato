<org.snipsnap.config.ConfigurationMap: void setGlobal(java.lang.String,java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String getGlobal(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String getGlobalDefault(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.util.Properties getGlobals()>
<org.snipsnap.config.ConfigurationMap: void loadGlobals(java.io.InputStream)>
<org.snipsnap.config.ConfigurationMap: void storeGlobals(java.io.OutputStream)>
<org.snipsnap.config.ConfigurationMap: void setWebInfDir(java.io.File)>
<org.snipsnap.config.ConfigurationMap: java.io.File getWebInfDir()>
<org.snipsnap.config.ConfigurationMap: java.lang.String getFileStore()>
<org.snipsnap.config.ConfigurationMap: java.io.File getFileStore(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String getVersion()>
<org.snipsnap.config.ConfigurationMap: void <init>(org.snipsnap.config.Configuration)>
<org.snipsnap.config.ConfigurationMap: void <init>()>
<org.snipsnap.config.ConfigurationMap: void initDefaults()>
<org.snipsnap.config.ConfigurationMap: void initialize(java.util.Properties)>
<org.snipsnap.config.ConfigurationMap: void store(java.io.OutputStream)>
<org.snipsnap.config.ConfigurationMap: boolean load(java.io.InputStream)>
<org.snipsnap.config.ConfigurationMap: boolean convertOldProperties()>
<org.snipsnap.config.ConfigurationMap: boolean convertDeprecatedProperty(java.lang.String,java.lang.String)>
<org.snipsnap.config.ConfigurationMap: void set(java.lang.String,java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String get(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String replaceTokens(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String get(java.lang.String,java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.util.Properties getProperties()>
<org.snipsnap.config.ConfigurationMap: java.lang.String getDefault(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.io.File getFilePath(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.io.File getFilePath()>
<org.snipsnap.config.ConfigurationMap: java.io.File getIndexPath()>
<org.snipsnap.config.ConfigurationMap: java.io.File getUserPath(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.util.Locale getLocale()>
<org.snipsnap.config.ConfigurationMap: java.lang.String getPath()>
<org.snipsnap.config.ConfigurationMap: java.lang.String getUrl()>
<org.snipsnap.config.ConfigurationMap: java.lang.String getUrl(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: java.lang.String getSnipUrl(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: boolean allow(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: boolean deny(java.lang.String)>
<org.snipsnap.config.ConfigurationMap: boolean getAllowRegister()>
<org.snipsnap.config.ConfigurationMap: boolean isConfigured()>
<org.snipsnap.config.ConfigurationMap: boolean isInstalled()>
<org.snipsnap.config.ConfigurationMap: java.lang.String toString()>
<org.snipsnap.config.ConfigurationMap: void <clinit>()>
<org.snipsnap.config.ConfigurationManager: org.snipsnap.config.ConfigurationManager getInstance()>
<org.snipsnap.config.ConfigurationManager: void <init>()>
<org.snipsnap.config.ConfigurationManager: org.snipsnap.config.Configuration addConfiguration(java.lang.String,org.snipsnap.config.Configuration)>
<org.snipsnap.config.ConfigurationManager: void removeConfiguration(java.lang.String)>
<org.snipsnap.config.ConfigurationManager: org.snipsnap.config.Configuration getConfiguration(java.lang.String)>
<org.snipsnap.config.ConfigurationManager: java.lang.String checkForPrefix(java.lang.String)>
<org.snipsnap.config.ConfigurationManager: java.util.Iterator getOids()>
<org.snipsnap.config.ConfigurationManager: void consume(org.snipsnap.notification.Message)>
<org.snipsnap.config.ConfigurationManager: void <clinit>()>
