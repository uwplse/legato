<net.sourceforge.subsonic.service.SettingsService: void <clinit>()>
<net.sourceforge.subsonic.service.SettingsService: void <init>()>
<net.sourceforge.subsonic.service.SettingsService: void init()>
<net.sourceforge.subsonic.service.SettingsService: void save()>
<net.sourceforge.subsonic.service.SettingsService: void save(boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.io.File getPropertyFile()>
<net.sourceforge.subsonic.service.SettingsService: java.io.File getSubsonicHome()>
<net.sourceforge.subsonic.service.SettingsService: int getInt(java.lang.String,int)>
<net.sourceforge.subsonic.service.SettingsService: void setInt(java.lang.String,int)>
<net.sourceforge.subsonic.service.SettingsService: long getLong(java.lang.String,long)>
<net.sourceforge.subsonic.service.SettingsService: void setLong(java.lang.String,long)>
<net.sourceforge.subsonic.service.SettingsService: boolean getBoolean(java.lang.String,boolean)>
<net.sourceforge.subsonic.service.SettingsService: void setBoolean(java.lang.String,boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getString(java.lang.String,java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: void setString(java.lang.String,java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getIndexString()>
<net.sourceforge.subsonic.service.SettingsService: void setIndexString(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getIgnoredArticles()>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String[] getIgnoredArticlesAsArray()>
<net.sourceforge.subsonic.service.SettingsService: void setIgnoredArticles(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getShortcuts()>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String[] getShortcutsAsArray()>
<net.sourceforge.subsonic.service.SettingsService: void setShortcuts(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getPlaylistFolder()>
<net.sourceforge.subsonic.service.SettingsService: void setPlaylistFolder(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getMusicFileTypes()>
<net.sourceforge.subsonic.service.SettingsService: void setMusicFileTypes(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String[] getMusicFileTypesAsArray()>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getVideoFileTypes()>
<net.sourceforge.subsonic.service.SettingsService: void setVideoFileTypes(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String[] getVideoFileTypesAsArray()>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getCoverArtFileTypes()>
<net.sourceforge.subsonic.service.SettingsService: void setCoverArtFileTypes(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String[] getCoverArtFileTypesAsArray()>
<net.sourceforge.subsonic.service.SettingsService: int getCoverArtLimit()>
<net.sourceforge.subsonic.service.SettingsService: void setCoverArtLimit(int)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getWelcomeTitle()>
<net.sourceforge.subsonic.service.SettingsService: void setWelcomeTitle(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getWelcomeSubtitle()>
<net.sourceforge.subsonic.service.SettingsService: void setWelcomeSubtitle(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getWelcomeMessage()>
<net.sourceforge.subsonic.service.SettingsService: void setWelcomeMessage(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLoginMessage()>
<net.sourceforge.subsonic.service.SettingsService: void setLoginMessage(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: int getIndexCreationInterval()>
<net.sourceforge.subsonic.service.SettingsService: void setIndexCreationInterval(int)>
<net.sourceforge.subsonic.service.SettingsService: int getIndexCreationHour()>
<net.sourceforge.subsonic.service.SettingsService: void setIndexCreationHour(int)>
<net.sourceforge.subsonic.service.SettingsService: boolean isFastCacheEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setFastCacheEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: int getPodcastUpdateInterval()>
<net.sourceforge.subsonic.service.SettingsService: void setPodcastUpdateInterval(int)>
<net.sourceforge.subsonic.service.SettingsService: int getPodcastEpisodeRetentionCount()>
<net.sourceforge.subsonic.service.SettingsService: void setPodcastEpisodeRetentionCount(int)>
<net.sourceforge.subsonic.service.SettingsService: int getPodcastEpisodeDownloadCount()>
<net.sourceforge.subsonic.service.SettingsService: void setPodcastEpisodeDownloadCount(int)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getPodcastFolder()>
<net.sourceforge.subsonic.service.SettingsService: void setPodcastFolder(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: long getDownloadBitrateLimit()>
<net.sourceforge.subsonic.service.SettingsService: void setDownloadBitrateLimit(long)>
<net.sourceforge.subsonic.service.SettingsService: long getUploadBitrateLimit()>
<net.sourceforge.subsonic.service.SettingsService: void setUploadBitrateLimit(long)>
<net.sourceforge.subsonic.service.SettingsService: int getStreamPort()>
<net.sourceforge.subsonic.service.SettingsService: void setStreamPort(int)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLicenseEmail()>
<net.sourceforge.subsonic.service.SettingsService: void setLicenseEmail(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLicenseCode()>
<net.sourceforge.subsonic.service.SettingsService: void setLicenseCode(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.util.Date getLicenseDate()>
<net.sourceforge.subsonic.service.SettingsService: void setLicenseDate(java.util.Date)>
<net.sourceforge.subsonic.service.SettingsService: boolean isLicenseValid()>
<net.sourceforge.subsonic.service.SettingsService: boolean isLicenseValid(java.lang.String,java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.LicenseInfo getLicenseInfo()>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getDownsamplingCommand()>
<net.sourceforge.subsonic.service.SettingsService: void setDownsamplingCommand(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getHlsCommand()>
<net.sourceforge.subsonic.service.SettingsService: void setHlsCommand(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getJukeboxCommand()>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getVideoImageCommand()>
<net.sourceforge.subsonic.service.SettingsService: boolean isRewriteUrlEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setRewriteUrlEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: boolean isLdapEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setLdapEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLdapUrl()>
<net.sourceforge.subsonic.service.SettingsService: void setLdapUrl(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLdapSearchFilter()>
<net.sourceforge.subsonic.service.SettingsService: void setLdapSearchFilter(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLdapManagerDn()>
<net.sourceforge.subsonic.service.SettingsService: void setLdapManagerDn(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLdapManagerPassword()>
<net.sourceforge.subsonic.service.SettingsService: void setLdapManagerPassword(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: boolean isLdapAutoShadowing()>
<net.sourceforge.subsonic.service.SettingsService: void setLdapAutoShadowing(boolean)>
<net.sourceforge.subsonic.service.SettingsService: boolean isGettingStartedEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setGettingStartedEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: boolean isPortForwardingEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setPortForwardingEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: int getPort()>
<net.sourceforge.subsonic.service.SettingsService: void setPort(int)>
<net.sourceforge.subsonic.service.SettingsService: int getHttpsPort()>
<net.sourceforge.subsonic.service.SettingsService: void setHttpsPort(int)>
<net.sourceforge.subsonic.service.SettingsService: boolean isUrlRedirectionEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setUrlRedirectionEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getUrlRedirectFrom()>
<net.sourceforge.subsonic.service.SettingsService: void setUrlRedirectFrom(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.util.Date getTrialExpires()>
<net.sourceforge.subsonic.service.SettingsService: void setTrialExpires(java.util.Date)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getUrlRedirectContextPath()>
<net.sourceforge.subsonic.service.SettingsService: void setUrlRedirectContextPath(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getServerId()>
<net.sourceforge.subsonic.service.SettingsService: void setServerId(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: long getSettingsChanged()>
<net.sourceforge.subsonic.service.SettingsService: java.util.Date getLastScanned()>
<net.sourceforge.subsonic.service.SettingsService: void setLastScanned(java.util.Date)>
<net.sourceforge.subsonic.service.SettingsService: boolean isOrganizeByFolderStructure()>
<net.sourceforge.subsonic.service.SettingsService: void setOrganizeByFolderStructure(boolean)>
<net.sourceforge.subsonic.service.SettingsService: boolean isSortAlbumsByYear()>
<net.sourceforge.subsonic.service.SettingsService: void setSortAlbumsByYear(boolean)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.MediaLibraryStatistics getMediaLibraryStatistics()>
<net.sourceforge.subsonic.service.SettingsService: void setMediaLibraryStatistics(net.sourceforge.subsonic.domain.MediaLibraryStatistics)>
<net.sourceforge.subsonic.service.SettingsService: java.util.Locale getLocale()>
<net.sourceforge.subsonic.service.SettingsService: void setLocale(java.util.Locale)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getThemeId()>
<net.sourceforge.subsonic.service.SettingsService: void setThemeId(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.Theme[] getAvailableThemes()>
<net.sourceforge.subsonic.service.SettingsService: java.util.Locale[] getAvailableLocales()>
<net.sourceforge.subsonic.service.SettingsService: java.util.Locale parseLocale(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getBrand()>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getAllMusicFolders()>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getAllMusicFolders(boolean,boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getMusicFoldersForUser(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getMusicFoldersForUser(java.lang.String,java.lang.Integer)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.MusicFolder getSelectedMusicFolder(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getMusicFoldersForUser(java.lang.String,boolean,boolean)>
<net.sourceforge.subsonic.service.SettingsService: void setMusicFoldersForUser(java.lang.String,java.util.List)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.MusicFolder getMusicFolderById(java.lang.Integer)>
<net.sourceforge.subsonic.service.SettingsService: void createMusicFolder(net.sourceforge.subsonic.domain.MusicFolder)>
<net.sourceforge.subsonic.service.SettingsService: void deleteMusicFolder(java.lang.Integer)>
<net.sourceforge.subsonic.service.SettingsService: void updateMusicFolder(net.sourceforge.subsonic.domain.MusicFolder)>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getAllInternetRadios()>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.InternetRadio getInternetRadioById(java.lang.Integer)>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getAllInternetRadios(boolean)>
<net.sourceforge.subsonic.service.SettingsService: void createInternetRadio(net.sourceforge.subsonic.domain.InternetRadio)>
<net.sourceforge.subsonic.service.SettingsService: void deleteInternetRadio(java.lang.Integer)>
<net.sourceforge.subsonic.service.SettingsService: void updateInternetRadio(net.sourceforge.subsonic.domain.InternetRadio)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.UserSettings getUserSettings(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.UserSettings createDefaultUserSettings(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: void updateUserSettings(net.sourceforge.subsonic.domain.UserSettings)>
<net.sourceforge.subsonic.service.SettingsService: java.util.List getAllSystemAvatars()>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.Avatar getSystemAvatar(int)>
<net.sourceforge.subsonic.service.SettingsService: net.sourceforge.subsonic.domain.Avatar getCustomAvatar(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: void setCustomAvatar(net.sourceforge.subsonic.domain.Avatar,java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: boolean isDlnaEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setDlnaEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getDlnaServerName()>
<net.sourceforge.subsonic.service.SettingsService: void setDlnaServerName(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: boolean isSonosEnabled()>
<net.sourceforge.subsonic.service.SettingsService: void setSonosEnabled(boolean)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getSonosServiceName()>
<net.sourceforge.subsonic.service.SettingsService: void setSonosServiceName(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: int getSonosServiceId()>
<net.sourceforge.subsonic.service.SettingsService: void setSonosServiceId(int)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String getLocalIpAddress()>
<net.sourceforge.subsonic.service.SettingsService: void setProperty(java.lang.String,java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: java.lang.String[] toStringArray(java.lang.String)>
<net.sourceforge.subsonic.service.SettingsService: void validateLicense()>
<net.sourceforge.subsonic.service.SettingsService: void scheduleLicenseValidation()>
<net.sourceforge.subsonic.service.SettingsService: void scheduleLocalIpAddressLookup()>
<net.sourceforge.subsonic.service.SettingsService: void setInternetRadioDao(net.sourceforge.subsonic.dao.InternetRadioDao)>
<net.sourceforge.subsonic.service.SettingsService: void setMusicFolderDao(net.sourceforge.subsonic.dao.MusicFolderDao)>
<net.sourceforge.subsonic.service.SettingsService: void setUserDao(net.sourceforge.subsonic.dao.UserDao)>
<net.sourceforge.subsonic.service.SettingsService: void setAvatarDao(net.sourceforge.subsonic.dao.AvatarDao)>
<net.sourceforge.subsonic.service.SettingsService: void setVersionService(net.sourceforge.subsonic.service.VersionService)>
<net.sourceforge.subsonic.service.SettingsService: void access$0(net.sourceforge.subsonic.service.SettingsService,java.lang.String)>
